{
    "AWSTemplateFormatVersion" : "2010-09-09",

	"Description" : "SEIS665 Assignment 8",
	
	"Metadata" : { 
		"This template creates the following stack:" : [ 
			"One VPC with two Subnets; each Subnet is in a separate Availability Zone",
			"An Internet Gateway for the VPC",
			"A Route Table for the Subnets to route traffic to the Internet via the Internet Gateway",
			"Two EC2 Instances (webservers); one in each of the two Subnets",
			"A Security Group for the EC2 Instances",
			"A Load Balancer for balancing load between the two Instances",
			"A Security Group for the Load Balancer"
		],
		"And outputs the following:" : [
			"The Load Balancer DNS Name"
		],
		"Created by:" : "Wade Lykkehoy"
	},
	
	"Parameters" : {
		"InstanceType" : {
			"Description" : "Enter the instance type (t2.micro or t2.small)",
			"Type" : "String",
			"AllowedValues" : [ "t2.micro", "t2.small" ]
		},
		"KeyPair" : {
			"Description" : "Enter the name of your EC2 key pair (must be an existing key pair)",
            "Type" : "AWS::EC2::KeyPair::KeyName"		
		},
		"YourIp" : {
			"Description" : "Enter the CIDR IP address of your workstation to allow SSH connection to the instances (x.x.x.x/32)",
			"Type" : "String",
			"AllowedPattern" : "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-9]|3[0-2]))$",
			"ConstraintDescription" : "Must be a valid IP CIDR range of the form x.x.x.x/x."
		}
	},
	
    "Resources" : {
		"EngineeringVpc" : {
			"Type" : "AWS::EC2::VPC",
			"Properties" : {
				"EnableDnsSupport" : true,
				"EnableDnsHostnames" : true,
				"CidrBlock" : "10.0.0.0/18",
				"Tags": [ 
					{ "Key" : "Name", "Value" : "EngineeringVpc" },
					{ "Key" : "Stack", "Value" : { "Ref" : "AWS::StackName" } }
				]
			}
		},
        "InternetGateway" : {
            "Type" : "AWS::EC2::InternetGateway",
            "Properties" : {
				"Tags" : [ 
					{ "Key" : "Name", "Value" : "InternetGateway" },
					{ "Key" : "Stack", "Value" : { "Ref" : "AWS::StackName" } }
				]
            }
        },
        "InternetGatewayToVPCAttachment": {
            "Type" : "AWS::EC2::VPCGatewayAttachment",
            "Properties" : {
                "InternetGatewayId" : { "Ref" : "InternetGateway" },
                "VpcId" : { "Ref" : "EngineeringVpc" }
            }
        },		
		"PublicSubnet1" : {
			"Type" : "AWS::EC2::Subnet",
			"Properties" : {
				"VpcId" : { "Ref" : "EngineeringVpc" },
				"CidrBlock" : "10.0.0.0/24",
				"AvailabilityZone" : { "Fn::Select" : [ "0", { "Fn::GetAZs" : { "Ref" : "AWS::Region" } } ] },
				"MapPublicIpOnLaunch" : true,
				"Tags" : [ 
					{ "Key" : "Name", "Value" : "PublicSubnet1" },
					{ "Key" : "Stack", "Value" : { "Ref" : "AWS::StackName" } }
				]
			}
		},
		"PublicSubnet2" : {
			"Type" : "AWS::EC2::Subnet",
			"Properties" : {
				"VpcId" : { "Ref" : "EngineeringVpc" },
				"CidrBlock" : "10.0.1.0/24",
				"AvailabilityZone" : { "Fn::Select" : [ "1", { "Fn::GetAZs" : { "Ref" : "AWS::Region" } } ] },
				"MapPublicIpOnLaunch" : true,
				"Tags" : [ 
					{ "Key" : "Name", "Value" : "PublicSubnet2" },
					{ "Key" : "Stack", "Value" : { "Ref" : "AWS::StackName" } }
				]
			}
		},
		"SubnetRouteTable" : {
			"Type" : "AWS::EC2::RouteTable",
			"Properties" : {
				"VpcId" : { "Ref" : "EngineeringVpc" },
				"Tags" : [ 
					{ "Key" : "Name", "Value" : "SubnetRouteTable" },
					{ "Key" : "Stack", "Value" : { "Ref" : "AWS::StackName" } }
				]
			}
		},
		"RouteToInternetGateway" : {
			"Type" : "AWS::EC2::Route",
			"Properties" : {
				"RouteTableId" : { "Ref" : "SubnetRouteTable" },
				"DestinationCidrBlock" : "0.0.0.0/0",
				"GatewayId" : { "Ref" : "InternetGateway" }
			}
		},
		"PublicSubnet1ToRouteTableAssociation" : {
			"Type" : "AWS::EC2::SubnetRouteTableAssociation",
			"Properties" : {
				"RouteTableId" : { "Ref" : "SubnetRouteTable" },
				"SubnetId" : { "Ref" : "PublicSubnet1" }
			}
		},		
		"PublicSubnet2ToRouteTableAssociation" : {
			"Type" : "AWS::EC2::SubnetRouteTableAssociation",
			"Properties" : {
				"RouteTableId" : { "Ref" : "SubnetRouteTable" },
				"SubnetId" : { "Ref" : "PublicSubnet2" }
			}
		},
		"WebserversSG" : {
			"Type" : "AWS::EC2::SecurityGroup",
			"Properties" : {
				"GroupDescription" : "Allow SSH only from the specified workstation IP; http from anywhere",
				"VpcId" : {"Ref" : "EngineeringVpc"},
				"SecurityGroupIngress" : [ 
					{ "IpProtocol" : "tcp", "FromPort" : 22, "ToPort" : 22, "CidrIp" : { "Ref" : "YourIp" } },
					{ "IpProtocol" : "tcp", "FromPort" : 80, "ToPort" : 80, "CidrIp" : "0.0.0.0/0" } 
				],
				"Tags" : [ 
					{ "Key" : "Name", "Value" : "WebserversSG" },
					{ "Key" : "Stack", "Value" : { "Ref" : "AWS::StackName" } }
				]				
			}
		},
		"web1" : {
			"Type" : "AWS::EC2::Instance",
			"Properties" : {
				"InstanceType" : { "Ref" : "InstanceType" },
				"ImageId" : "ami-3ea13f29",
				"SubnetId" : { "Ref" : "PublicSubnet1" },				
				"SecurityGroupIds" : [ 
					{ "Ref" : "WebserversSG" } 
				],
				"KeyName" : { "Ref" : "KeyPair" },				
				"Tags" : [ 
					{ "Key" : "Name", "Value" : "web1" },
					{ "Key" : "Stack", "Value" : { "Ref" : "AWS::StackName" } }
				]
			}
		},
		"web2" : {
			"Type" : "AWS::EC2::Instance",
			"Properties" : {
				"InstanceType" : { "Ref" : "InstanceType" },
				"ImageId" : "ami-3ea13f29",
				"SubnetId" : { "Ref" : "PublicSubnet2" },				
				"SecurityGroupIds" : [ 
					{ "Ref" : "WebserversSG" } 
				],
				"KeyName" : { "Ref" : "KeyPair" },				
				"Tags" : [ 
					{ "Key" : "Name", "Value" : "web2" },
					{ "Key" : "Stack", "Value" : { "Ref" : "AWS::StackName" } }
				]
			}
		},
		"LoadBalancerSG" : {
			"Type" : "AWS::EC2::SecurityGroup",
			"Properties" : {
				"GroupDescription" : "Only allow hppt; from anywhere",
				"VpcId" : {"Ref" : "EngineeringVpc"},
				"SecurityGroupIngress" : [ 
					{ "IpProtocol" : "tcp", "FromPort" : 80, "ToPort" : 80, "CidrIp" : "0.0.0.0/0" } 
				],
				"Tags" : [ 
					{ "Key" : "Name", "Value" : "LoadBalancerSG" },
					{ "Key" : "Stack", "Value" : { "Ref" : "AWS::StackName" } }
				]				
			}
		},
		"EngineeringLB" : {
			"Type" : "AWS::ElasticLoadBalancingV2::LoadBalancer",
			"Properties" : {
				"Scheme" : "internet-facing",
				"Subnets" : [ 
					{ "Ref" : "PublicSubnet1" }, 
					{ "Ref" : "PublicSubnet2" }
				],
				"SecurityGroups" : [
					{ "Ref": "LoadBalancerSG" }
				],
				"Tags" : [
					{ "Key" : "Name", "Value" : "EngineeringLB" },
					{ "Key" : "Stack", "Value" : { "Ref": "AWS::StackName" } }
				]
			}
		},
		"EngineeringWebservers" : {
			"Type" : "AWS::ElasticLoadBalancingV2::TargetGroup",
			"Properties" : {
				"Name" : "EngineeringWebservers",
				"VpcId" : { "Ref": "EngineeringVpc" },
				"Protocol" : "HTTP",
				"Port" : 80,
				"Targets" : [
					{ "Id" : { "Ref" : "web1" }, "Port" : 80 },
					{ "Id" : { "Ref" : "web2" }, "Port" : 80 }
				],				
				"HealthCheckPath" : "/",				
				"Tags" : [
					{ "Key" : "Name", "Value" : "EngineeringWebservers" },
					{ "Key" : "Stack", "Value" : { "Ref": "AWS::StackName" } }
				]
			}
		},
		"EngineeringWebserversListener" : {
			"Type" : "AWS::ElasticLoadBalancingV2::Listener",
			"Properties" : {
				"DefaultActions" : [
					{ "Type" : "forward", "TargetGroupArn" : { "Ref" : "EngineeringWebservers" } }
				],
				"LoadBalancerArn" : { "Ref" : "EngineeringLB" },
				"Port" : 80,
				"Protocol" : "HTTP"
			}
		}
    },
	
	"Outputs" : {
		"WebUrl" : {
			"Description" : "Load balancer DNS",
			"Value" : { "Fn::GetAtt": [ "EngineeringLB", "DNSName" ] }
		}		
	}

}
